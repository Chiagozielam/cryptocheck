{"version":3,"sources":["Today/Today.jsx","History/History.jsx","components/More.jsx","components/landing.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Today","state","btcprice","ltcprice","ethprice","_this2","this","Axios","get","then","response","setState","data","BTC","USD","LTC","ETH","catch","err","console","log","react_default","a","createElement","className","react_router_dom","to","Component","History","todayprice","yesterdayprice","twodaysprice","threedaysprice","fourdaysprice","getBTCPrices","_this","bind","Object","assertThisInitialized","getETHPrices","getLTCPrices","date","axios","t","moment","unix","all","spread","eth","btc","ltc","f","format","_this3","subtract","_this4","_this5","_this6","getTodayPrice","getYesterdayPrice","getTwoDaysPrice","getThreeDaysPrice","getFourDaysPrice","More","search","xrpprice","bchprice","xlmprice","eosprice","adaprice","xmrprice","udstprice","trxprice","res","XRP","BCH","XLM","EOS","ADA","XMR","UDST","TRX","value","document","getElementById","items","getElementsByClassName","i","length","innerHTML","indexOf","style","display","type","name","onKeyUp","searchFunc","id","placeholder","Landing","src_Today_Today","src_History_History","Main","react_router","exact","path","component","App","href","target","rel","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","basename","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78821c9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Today.css\";\r\nimport Axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Today extends Component {\r\n  state = {\r\n    btcprice: \"\",\r\n    ltcprice: \"\",\r\n    ethprice: \"\"\r\n  };\r\n\r\n  // This is called when an instance of a component is being created and inserted into the DOM\r\n\r\n  componentWillMount() {\r\n    Axios.get(\r\n      \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD\"\r\n    )\r\n      .then(response => {\r\n        // we're setting the latest prices in the state to the prices gotten from cryptocurrency\r\n        this.setState({ btcprice: response.data.BTC.USD });\r\n        this.setState({ ltcprice: response.data.LTC.USD });\r\n        this.setState({ ethprice: response.data.ETH.USD });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"today--section container\">\r\n        <h2>Current Price</h2>\r\n        <div className=\"columns today--section__box\">\r\n          <div className=\"column btc--section\">\r\n            <h5>${this.state.btcprice}</h5>\r\n            <p>1 BTC</p>\r\n          </div>\r\n          <div className=\"column eth--section\">\r\n            <h5>${this.state.ethprice}</h5>\r\n            <p>1 ETH</p>\r\n          </div>\r\n          <div className=\"column ltc--section\">\r\n            <h5>${this.state.ltcprice}</h5>\r\n            <p>1 LTC</p>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/more\">More >>> </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Today;\r\n","import React, { Component } from \"react\";\r\nimport \"./History.css\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nclass History extends Component {\r\n  state = {\r\n    todayprice: {},\r\n    yesterdayprice: {},\r\n    twodaysprice: {},\r\n    threedaysprice: {},\r\n    fourdaysprice: {}\r\n  };\r\n  getBTCPrices = this.getBTCPrices.bind(this);\r\n  getETHPrices = this.getETHPrices.bind(this);\r\n  getLTCPrices = this.getLTCPrices.bind(this);\r\n\r\n  // This function gets the ETH price for a specific timestamp/date. The date is passed in as an argument\r\n  getETHPrices(date) {\r\n    return axios.get(\r\n      \"https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=USD&ts=\" +\r\n        date\r\n    );\r\n  }\r\n  // This function gets the BTC price for a specific timestamp/date. The date is passed in as an argument\r\n  getBTCPrices(date) {\r\n    return axios.get(\r\n      \"https://min-api.cryptocompare.com/data/pricehistorical?fsym=BTC&tsyms=USD&ts=\" +\r\n        date\r\n    );\r\n  }\r\n  // This function gets the LTC price for a specific timestamp/date. The date is passed in as an argument\r\n  getLTCPrices(date) {\r\n    return axios.get(\r\n      \"https://min-api.cryptocompare.com/data/pricehistorical?fsym=LTC&tsyms=USD&ts=\" +\r\n        date\r\n    );\r\n  }\r\n\r\n  // This function gets the today price\r\n  getTodayPrice() {\r\n      let t = moment().unix()\r\n      // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required\r\n      axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n      .then(axios.spread((eth, btc, ltc) => {\r\n        let f = {\r\n            date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n            eth: eth.data.ETH.USD,\r\n            btc: btc.data.BTC.USD,\r\n            ltc: ltc.data.LTC.USD\r\n        }\r\n        // Set the state of todayprice to the content of the object f\r\n        this.setState({ todayprice: f });\r\n    }));\r\n  }\r\n\r\n    // This function gets the prices for the yesterday.\r\n     getYesterdayPrice () {\r\n        // Get yesterday's date in timestamp\r\n        let t = moment().subtract(1, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of yesterdayprice to the content of the object f\r\n                this.setState({ yesterdayprice: f });\r\n            }));\r\n    }\r\n\r\n    // This function gets the prices for the two days ago.\r\n    getTwoDaysPrice () {\r\n        // Get the date for two days ago in timestamp\r\n        let t = moment().subtract(2, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of twodaysprice to the content of the object f\r\n                this.setState({ twodaysprice: f });\r\n            }));\r\n    }\r\n\r\n    // This function gets the prices for the three days ago.\r\n    getThreeDaysPrice () {\r\n        // Get the date for three days ago in timestamp\r\n        let t = moment().subtract(3, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of threedaysprice to the content of the object f\r\n                this.setState({ threedaysprice: f });\r\n            }));\r\n    }\r\n    // This function gets the prices for the four days ago.\r\n    getFourDaysPrice () {\r\n        // Get the date for four days ago in timestamp\r\n        let t = moment().subtract(4, 'days').unix();\r\n        // axios.all is used to make concurrent API requests. These requests were the functions we first created and they accept an argument of the date required.\r\n        axios.all([this.getETHPrices(t), this.getBTCPrices(t), this.getLTCPrices(t)])\r\n            .then(axios.spread((eth, btc, ltc) => {\r\n                let f = {\r\n                    date: moment.unix(t).format(\"MMMM Do YYYY\"),\r\n                    eth: eth.data.ETH.USD,\r\n                    btc: btc.data.BTC.USD,\r\n                    ltc: ltc.data.LTC.USD\r\n                }\r\n                // Set the state of fourdaysprice to the content of the object f\r\n                this.setState({ fourdaysprice: f });\r\n            }));\r\n    }\r\n\r\n    componentWillMount () {\r\n        this.getTodayPrice();\r\n        this.getYesterdayPrice();\r\n        this.getTwoDaysPrice();\r\n        this.getThreeDaysPrice();\r\n        this.getFourDaysPrice();\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"history--section container\">\r\n                    <h1>Coin History (Past 5 days)</h1>\r\n                    <div className=\"history-section-main-box\">\r\n                        <div className=\"history-section-inner-box\">\r\n                            <h4>{this.state.todayprice.date}</h4>\r\n                            <div className=\"columns\">\r\n                                <div className=\"column\">\r\n                                    <p>1 BTC = ${this.state.todayprice.btc}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 ETH = ${this.state.todayprice.eth}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 LTC = ${this.state.todayprice.ltc}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"line\"></p>\r\n\r\n                        <div className=\"history-section-inner-box\">\r\n                            <h4>{this.state.yesterdayprice.date}</h4>\r\n                            <div className=\"columns\">\r\n                                <div className=\"column\">\r\n                                    <p>1 BTC = ${this.state.yesterdayprice.btc}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 ETH = ${this.state.yesterdayprice.eth}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 LTC = ${this.state.yesterdayprice.ltc}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"line\"></p>\r\n\r\n                        <div className=\"history-section-inner-box\">\r\n                            <h4>{this.state.twodaysprice.date}</h4>\r\n                            <div className=\"columns\">\r\n                                <div className=\"column\">\r\n                                    <p>1 BTC = ${this.state.twodaysprice.btc}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 ETH = ${this.state.twodaysprice.eth}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 LTC = ${this.state.twodaysprice.ltc}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"line\"></p>\r\n\r\n                        <div className=\"history-section-inner-box\">\r\n                            <h4>{this.state.threedaysprice.date}</h4>\r\n                            <div className=\"columns\">\r\n                                <div className=\"column\">\r\n                                    <p>1 BTC = ${this.state.threedaysprice.btc}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 ETH = ${this.state.threedaysprice.eth}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 LTC = ${this.state.threedaysprice.ltc}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"line\"></p>\r\n                        \r\n                        <div className=\"history-section-inner-box\">\r\n                            <h4>{this.state.fourdaysprice.date}</h4>\r\n                            <div className=\"columns\">\r\n                                <div className=\"column\">\r\n                                    <p>1 BTC = ${this.state.fourdaysprice.btc}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 ETH = ${this.state.fourdaysprice.eth}</p>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <p>1 LTC = ${this.state.fourdaysprice.ltc}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n    )\r\n  }\r\n}\r\nexport default History;\r\n","import React, { Component } from \"react\";\r\nimport \"./More.css\";\r\nimport Axios from \"axios\";\r\n\r\nclass More extends Component {\r\n  state = {\r\n    search: \"hththth\",\r\n\r\n    btcprice: \"\",\r\n    ltcprice: \"\",\r\n    ethprice: \"\",\r\n    xrpprice: \"\",\r\n\r\n    bchprice: \"\",\r\n    xlmprice: \"\",\r\n    eosprice: \"\",\r\n\r\n    adaprice: \"\",\r\n    xmrprice: \"\",\r\n    udstprice: \"\",\r\n    trxprice: \"\",\r\n  };\r\n\r\n   // This is called when an instance of a component is being created and inserted into the DOM\r\n   componentDidMount() {\r\n    Axios.get(\r\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC,XRP,BCH,XLM,EOS,ADA,XMR,UDST,TRX&tsyms=USD\"\r\n      )\r\n      .then(res => {\r\n        this.setState({ btcprice: res.data.BTC.USD });\r\n        this.setState({ ltcprice: res.data.LTC.USD });\r\n        this.setState({ ethprice: res.data.ETH.USD });\r\n        this.setState({ xrpprice: res.data.XRP.USD });\r\n        this.setState({ bchprice: res.data.BCH.USD });\r\n        this.setState({ xlmprice: res.data.XLM.USD });\r\n        this.setState({ eosprice: res.data.EOS.USD });\r\n        this.setState({ adaprice: res.data.ADA.USD });\r\n        this.setState({ xmrprice: res.data.XMR.USD });\r\n        this.setState({ udstprice: res.data.UDST.USD });\r\n        this.setState({ trxprice: res.data.TRX.USD });\r\n      })\r\n      .catch(err => console.log(err));\r\n   }\r\n\r\n   searchFunc() {\r\n        let value = document.getElementById(\"search\").value;\r\n\r\n        let items = document.getElementsByClassName(\"filter\");\r\n        for (let i = 0; i < items.length; i++) {\r\n            let a = items[1].getElementsByClassName(\"filt-item\")[0]\r\n            if (a.innerHTML.indexOf(value) > -1) {\r\n\r\n                items[i].style.display = \"\"\r\n            }else{\r\n                items[i].style.display = \"none\"\r\n            }\r\n            \r\n            \r\n        }\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n      <input type=\"text\" name=\"coin_search\" onKeyUp={this.searchFunc.bind(this)} id=\"search\" placeholder=\"Search For A Coin...\"/>\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>BTC (BitCoin)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.btcprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>LTC (Litecoin)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.ltcprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>ETH (Ethereum)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.ethprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>XRP (Ripple)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.xrpprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>BCH (BitCoin Cash)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.bchprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>XLM (Stellar Lumens)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.xlmprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>EOS (EOS)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.eosprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>ADA (Cardano)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.adaprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>XMR (Monero)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.xmrprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>UDST (Tether)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.udstprice}</p></div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card grey my-card\">\r\n            <div className=\"row filter\">\r\n                <div className=\"col s4 filt-item\"><p>TRX (Tron)</p></div>\r\n                <div className=\"col s8\"><p id=\"price-col\">${this.state.trxprice}</p></div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default More;\r\n","import React, { Component } from \"react\";\r\nimport Today from \"../Today/Today\";\r\nimport History from \"../History/History\";\r\nimport { deflate } from \"zlib\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Today />\r\n        <History />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, {Component} from 'react';\r\nimport More from './More';\r\nimport Landing from './landing';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route path=\"/more\" component={More} />\r\n    </Switch>\r\n);\r\n\r\nexport default Main ;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Today from \"./Today/Today\";\nimport History from \"./History/History\";\nimport MainRouter from \"./components/Main\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App white-text\">\n        <div className=\"topheader\">\n          <header className=\"container\">\n            <nav className=\"navbar\">\n              <div className=\"navbar-brand\">\n                <span className=\"navbar-item\">CryptoCheck</span>\n              </div>\n              <div className=\"navbar-end\">\n                <a\n                  className=\"navbar-item\"\n                  href=\"https://chiagozielam.github.io\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  My Portfolio\n                </a>\n              </div>\n            </nav>\n          </header>\n        </div>\n\n        <section className=\"results--section\">\n          <div className=\"container\">\n            <h1>\n              CryptoCheck gives you a real-time platform to easily chech the\n              price of Bitcoin and other Altcoins\n            </h1>\n          </div>\n          <div className=\"results--section__inner\">\n            <MainRouter />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter basename=\"/cryptocheck\"><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}